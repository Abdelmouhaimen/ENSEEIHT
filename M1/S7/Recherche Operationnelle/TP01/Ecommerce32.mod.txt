#  GLPK model file created by SUN for RO teaching


###############################  Model ###############################


###############################  Sets  ###############################

set COMMANDS ;
set FLUIDS ;
set MAGASINS ;

################### Variables ###################

var Q{ i in MAGASINS  , j in FLUIDS ,k in COMMANDS }, >=0;

var E { i in MAGASINS , k in COMMANDS }, binary ;

###################  Constants: Data to load   #########################

param Demandes{ k in COMMANDS , j in FLUIDS};

param Stocks{ i in MAGASINS , j in FLUIDS};

param max := max{i in MAGASINS  , j in FLUIDS } Stocks[i,j];

param M := card(FLUIDS)*max ;

param Couts{ i in MAGASINS , j in FLUIDS}; 

param CoutsFixesExp{ k in COMMANDS, i in MAGASINS};

param CoutsVariablesExp{ k in  COMMANDS , i in MAGASINS};

################### Constraints ###################

s.t.RespectStock{i in MAGASINS , j in FLUIDS } :
    sum{k in COMMANDS } Q[i,j,k] <= Stocks[i,j];
    

s.t.RespectCommands {k in COMMANDS ,  j in FLUIDS } :
    sum { i in MAGASINS } Q[i,j,k] =   Demandes[k,j] ;

s.t.RespectExp{i in MAGASINS , k in COMMANDS} :
    sum{ j in FLUIDS} Q[i,j,k] <= M*E[i,k];
    
###### Objective ######

    
minimize Cout :
    sum{k in COMMANDS}  sum{i in MAGASINS} ( (sum{j in FLUIDS} Q[i,j,k] * Couts[i,j]) + ((CoutsFixesExp[k,i]+CoutsVariablesExp[k,i])*E[i,k]));





#default data



data ;



set COMMANDS := 
D1
D2;

set FLUIDS := 
F1
F2;

set MAGASINS := 
M1
M2
M3;


param Demandes : F1 F2 :=
D1 2 0
D2 1 3;

param Stocks : F1 F2 := 
M1 2.5 1
M2 1 2
M3 2 1 ;


param Couts : F1 F2 :=
M1 1 1
M2 2 3
M3 3 2;

param CoutsFixesExp : M1 M2 M3 :=
D1 110 90 100
D2 110 90 100;

param CoutsVariablesExp : M1 M2 M3 :=
D1 10 1 5
D2 2 20 10;

end;
