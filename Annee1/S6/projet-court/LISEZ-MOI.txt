Nom       : Sarhane
Prénom    : Abdelmouhaimen
Groupe TP : H

Les « ... » indiquent les endroits à compléter.

=====[ Temps passé ]============================================================

Ces informations de temps sont demandées à titre indicatif et ne sont pas
prises en compte dans la notation du projet.


* Temps passé sur la V1 : 9 heures 0 minutes
* Temps passé sur la V2 : 4 heures 0 minutes

Pour la V2 on ne tiendra pas compte du temps passé sur la V1.


=====[ Questions ]==============================================================

--------------------------------------------------------------------------------
Pourquoi l'exception OperationInterditeException ne peut pas être définie
comme vérifiée par le compilateur ?
--------------------------------------------------------------------------------

En effet, la raison pour laquelle on a choisi de faire de l'exception OperationInterditeException une exception de type RuntimeException est liée à la façon dont on voulait gérer cette exception dans notre conception.

Cette exception n'était pas destinée à être traitée dans la classe Strategie et ne devait pas être précisée dans l'interface du Jeu. En la définissant comme une exception de type RuntimeException, nous avons choisi de la rendre non vérifiée par le compilateur, ce qui signifie que nous ne sommes pas obligés de la préciser dans les clauses throws des méthodes qui pourraient potentiellement la lever.

Cela nous permet de ne pas avoir à gérer l'exception dans chaque classe qui utilise la classe Jeu, mais plutôt de la gérer au niveau de la classe Arbitre. De cette façon, nous avons plus de liberté pour gérer les exceptions et cela nous permet de ne pas polluer notre code avec des clauses throws inutiles.


--------------------------------------------------------------------------------
Expliquer ce qu'il faut faire pour ajouter un nouveau niveau de jeu, par
exemple la stratégie lente (C13).  Pour plus de précision, on numérotera
les étapes à faire.
--------------------------------------------------------------------------------

Pour ajouter une nouvelle stratégie de jeu, voici les étapes à suivre :

- Créer une nouvelle classe implémentant l'interface Strategie. Par exemple, pour la stratégie lente, on pourrait créer une classe appelée "StratLente" .
- Implémenter la méthode getPrise de l'interface Strategie dans la classe StratLente pour retourner 1, qui représente la quantité d'allumettes à enlever à chaque tour.
- Modifier la méthode afficherUsage() de la classe Jouer pour inclure le nom de la nouvelle stratégie dans la liste des stratégies possibles.
- Modifier la méthode main de la classe Jouer pour inclure la nouvelle stratégie dans la liste des stratégies possibles. Par exemple, dans la boucle qui crée les joueurs, ajouter un cas pour la nouvelle stratégie.



--------------------------------------------------------------------------------
Expliquer ce qui permet, dans votre conception, de changer dynamiquement
(en cours d'exécution du programme) la stratégie d'un joueur (C14).
--------------------------------------------------------------------------------

Lors de la création d'une partie, un joueur est instancié en utilisant un nom et le nom de la stratégie correspondante. Ainsi, le joueur est lié à une stratégie spécifique au moment de sa création.

Si l'on souhaite changer la stratégie d'un joueur en cours de partie, il suffit de créer une nouvelle instance de la stratégie souhaitée et de l'affecter au joueur en utilisant la méthode setStrategie() de la classe Joueur. Cette méthode permet de remplacer la stratégie en cours par la nouvelle stratégie.

Grâce à cette méthode, il est donc possible de changer dynamiquement la stratégie d'un joueur en cours de partie, sans avoir à modifier la structure globale du programme.


=====[ Explications ]===========================================================

--------------------------------------------------------------------------------
Donner ici les explications supplémentaires utiles à la compréhension du
travail rendu.
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
